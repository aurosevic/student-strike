---
import Base from "@layouts/Base.astro";
import { collection, file, langs } from "@scripts/i18n";
import { Picture, getImage } from "astro:assets";

import { CARD_MAX_SUBTITLE_LENGTH, SITE_DESCRIPTION } from "../../consts";
import slavija from "@assets/images/slavija.jpg";
import Live from "@components/Live.astro";
import RecentPosts from "@components/RecentPosts.astro";

export async function getStaticPaths() {
  return langs.map((lang) => ({ params: { lang } }));
}

function getSummary(longString: string): string {
  let splitIndex = CARD_MAX_SUBTITLE_LENGTH - 3;
  while (longString[splitIndex--] != " ");
  return longString.substring(0, splitIndex + 1) + "...";
}

const { lang } = Astro.params;
const { Content: Pocetna } = await file("pocetna", lang);
const { Content: Zahtevi } = await file("zahtevi", lang);
const { frontmatter } = await file("ostalo", lang);
const live = (await collection("vesti", lang)).find((vest) => vest.data.live);
const optimizedSlavija = await getImage({ src: slavija, format: "avif" });

const newsData = await collection("vesti", lang);
const news = newsData.map((x) => ({
  title: x.data.title,
  subtitle: getSummary(x.body ?? ""),
  thumbnail: x.data.heroImage.src,
  link: `/${lang}/vesti/${x.id}/`,
  date: x.data.pubDate,
}));

const akcijeData = await collection("akcije", lang);
const akcije = akcijeData.map((x) => ({
  title: x.data.title,
  subtitle: getSummary(x.body ?? ""),
  thumbnail: x.data.heroImage.src,
  link: `/${lang}/akcije/${x.id}/`,
  date: x.data.pubDate,
}));
---

<Base
  {lang}
  title={frontmatter.naslov}
  description={SITE_DESCRIPTION}
  image={slavija.src}
>
  <div
    slot="above"
    class="title"
    style={`background-image: url(${optimizedSlavija.src});`}
  >
    {
      typeof live !== "undefined" && (
        <Live href={`/${lang}/vesti/${live.id}`}>{live.data.title}</Live>
      )
    }

    <h1>{frontmatter.naslov}</h1>
  </div>

  <section>
    <Pocetna />
  </section>

  <section class="container-main">
    <Zahtevi />
  </section>

  <section class="posts-section container-main">
    <RecentPosts
      title={frontmatter.najnovije_vesti}
      subtitle={frontmatter.vesti_podnaslov}
      posts={news}
      numPosts={3}
      key="recentNews"
    />
    <a href=`/${lang}/vesti`
      ><button class="button-light">{frontmatter.dugme_vesti}</button></a
    >
  </section>

  <div class="dark-post">
    <section class="posts-section container-main">
      <RecentPosts
        title={frontmatter.najnovije_akcije}
        subtitle={frontmatter.najnovije_akcije_podnaslov}
        posts={akcije}
        numPosts={3}
        key="recentArchive"
      />
      <a href=`/${lang}/akcije`
        ><button class="button-red">{frontmatter.dugme_akcije}</button></a
      >
    </section>
  </div>
</Base>

<style>
  .title {
    position: relative;
    background-size: cover;
    background-position: center;
    height: 30rem;

    display: flex;
    align-items: center;
  }

  .title::before {
    content: "";
    position: absolute;
    background-color: rgba(0, 0, 0, 0.4);
    inset: 0;
    z-index: 0;
  }

  .title h1 {
    margin-inline: auto;
    padding-inline: 2rem;
    color: white;
    z-index: 1;
    font-size: 5rem;
    text-align: center;
  }

  @media (max-width: 720px) {
    .title h1 {
      padding-inline: 2vw;
      font-size: 13vw;
    }
  }

  .posts-section {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .dark-post {
    background-color: #e9e9e9;
    position:absolute;
    width: 100vw;
    left: 0;
  }

  @media (max-width: 720px) {
    .collage {
      grid-template-columns: 1fr;
      grid-template-areas:
        "megafon"
        "zastava"
        "indeks";
    }

    .collage img {
      max-height: 20vh;
    }
  }

  img {
    width: 100%;
    object-fit: cover;
  }

  .collage img {
    height: 100%;
  }

  .megafon {
    grid-area: megafon;
  }
  .indeks {
    grid-area: indeks;
  }

  .zastava {
    grid-area: zastava;
    object-position: bottom;
    max-height: 20vh;
  }

  .tekst-slika {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    align-items: stretch;
  }

  .tekst-slika div {
    grid-column: span 2;
  }

  @media (max-width: 1000px) {
    .tekst-slika {
      grid-template-columns: 1fr;
    }

    .tekst-slika div {
      grid-column: 1;
    }
  }

  p {
    text-align: justify;
  }

  .title .live {
    position: absolute;
    top: 2rem;
    left: 2rem;
  }
  button {
    cursor: pointer;
  }
  a {
    width: fit-content;
    display: block;
    text-decoration: underline;
  }
</style>
