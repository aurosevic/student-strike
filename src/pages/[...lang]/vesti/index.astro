---
import Base from "@layouts/Base.astro"
import { langs, collection, file } from "@scripts/i18n";

import { Picture } from "astro:assets";

import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";
import FormattedDate from "../../../components/FormattedDate.astro";
import Live from "@components/Live.astro";

const { lang } = Astro.params;
if (typeof lang === "undefined") {
  return Astro.rewrite(`/sr${Astro.url.pathname}`);
}

const posts = await collection("vesti", lang);

const { frontmatter } = await file("ostalo", lang);

export async function getStaticPaths() {
  return langs.map((lang) => ({ params: { lang } }));
}
---

<Base {lang} title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <div class="flex">
    <h1>{frontmatter.vesti}</h1>
    <button id="subscribe">{frontmatter.notifikacije}</button>
  </div>
  <section>
    <ul>
      {
        posts.map((post, index) => (
          <li>
            <a class="clear" href={`/${lang}/vesti/${post.id}/`}>
              <Picture transition:name={`/${lang}/vesti/${post.id}`} formats={['avif', 'webp']} width={720} src={post.data.heroImage} loading={index <= 3 ? "eager" : "lazy"} alt="" />
              <>
                {post.data.live &&
                  <Live>{frontmatter.live}</Live>
                }
              </>
              <>
                {lang !== post.lang &&
                  <p class="untranslated">Currently untranslated</p>
                }
              </>
              <h2 class="title">{post.data.title}</h2>
              <p class="date">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</Base>

<style>
  .flex {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    padding: 0;
  }

  ul li {
    width: calc(50% - 1rem);
  }

  ul li   * {
    transition: 0.2s ease;
  }

  ul li:first-child {
    width: 100%;
    margin-bottom: 1rem;
    text-align: center;
  }

  ul li:first-child img {
    width: 100%;
  }

  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
  }

  li > a {
    display: block;
    position: relative;
  }

  .title {
    margin: 0;
    color: rgb(var(--black));
    line-height: 1;
  }

  .date {
    margin: 0;
    color: rgb(var(--gray));
  }

  li > a:hover .title,
  li > a:hover .date {
    color: var(--accent);
  }

  li > a:hover img {
    box-shadow: var(--box-shadow);
  }

  @media (max-width: 720px) {
    ul {
      gap: 2em;
    }
    ul li {
      width: 100%;
      text-align: center;
    }
    ul li:first-child {
      margin-bottom: 0;
    }
  }

  .live {
    position: absolute;
    top: 2rem;
    left: 2rem;
  }

  .untranslated {
    background-color: bisque;
  }
</style>

<script>
  import { subscribe } from "@scripts/sw";
  document.getElementById("subscribe")?.addEventListener("click", async () => {
    try {
      await subscribe()
      alert("Notifications enabled");
    } catch (e) {
      alert(JSON.stringify(e));
    }
  });
</script>
