---
import Base from "./Base.astro";
import type { CollectionEntry } from "astro:content";
import { Picture } from "astro:assets";
import FormattedDate from "../components/FormattedDate.astro";
import Live from "@components/Live.astro";
import Timeline from "@components/Timeline.astro";
import { file } from "@scripts/i18n";

import 'leaflet/dist/leaflet.css';

type Props = CollectionEntry<"vesti">["data"] & {lang: string, live?: boolean};

const { lang, title, pubDate, updatedDate, heroImage, live = false, live_embed, timeline, map = null } = Astro.props;

const { lang: expectedLang } = Astro.params;

const { frontmatter } = await file("ostalo", lang);
---

<Base {lang} title={title} description={title} image={heroImage.src}>
  {expectedLang !== lang &&
    <div class="full-width">
      This page is currently not translated to English. Showing the untranslated version.
    </div>
  }
  <article>
    <div class="hero-image">
      {
        heroImage && (
          <Picture transition:name={Astro.originPathname} formats={['avif', 'webp']} width={1020} src={heroImage} loading="eager" alt="" />
        )
      }
    </div>
    <div class="prose">
      <div class="title">
        <div class="about">
          {live && <Live>{frontmatter.live}</Live>}
          {pubDate && <FormattedDate date={pubDate} />}
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1>{title}</h1>
        <hr />
      </div>

      {live_embed &&
        <div>
          <strong>{frontmatter.pratite_live}</strong>
          <br />
          <iframe
            class="live-embed"
            src={`https://www.youtube-nocookie.com/embed/${live_embed}`} 
            referrerpolicy="strict-origin-when-cross-origin" allowfullscreen 
          />
        </div>
      }

      { map &&
        <div data-map={JSON.stringify(map)} id="map"></div>
      }

      <Timeline {timeline} />

      <slot />
    </div>
  </article>
</Base>

<style>
  .hero-image {
    margin-top: 2rem;
    width: 100%;
  }

  .hero-image img {
    display: block;
    margin: 0 auto;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
  }
  .prose {
    color: rgb(var(--gray-dark));
  }

  .prose > :global(h1, h2, h3) {
    margin-top: 3rem;
    margin-bottom: 1rem;
  }

  .prose > :global(p) > :global(img) {
    width: 720px;
    max-width: calc(100% - 2em);
    display: block;
    margin-inline: auto;
  }

  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  }

  .title h1 {
    margin: 0 0 0.5em 0;
  }

  .about {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  .last-updated-on {
    font-style: italic;
  }

  .full-width {
    text-align: center;
    background-color: bisque;
    position: sticky;
    top: calc(4rem - 2px);
    padding-block: 0.5rem;
    z-index: 50;
  }

  @media (max-width: 500px) {
    .title h1 {
      font-size: 8vw;
    }
  }

  .live-embed {
    max-width: 600px;
    width: 100%;
    border: none;
    border-radius: 8px;
    aspect-ratio: 16/9;
  }

  #map {
    max-width: 600px;
    width: 100%;
    border: none;
    border-radius: 8px;
    aspect-ratio: 16/9;
  }
</style>

<script>
  import leaflet from "leaflet";

  const map_container = document.getElementById("map")!;
  const map_data = JSON.parse(map_container.dataset.map!);

  const map = leaflet.map(map_container, {
    center: leaflet.latLng(map_data.coords_lat, map_data.coords_long),
    zoom: map_data.zoom,
  });

  leaflet.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
  }).addTo(map);

  map_data.markers?.forEach(marker =>
      leaflet.marker([marker.coords_lat, marker.coords_long])
        .addTo(map)
        .bindPopup(marker.text)
  );
</script>
