---
import { Icon } from 'astro-icon/components';
import { ICON_SIZE_LG } from 'consts';
---

<astro-carousel>
  <div class="inner">
    <slot />
  </div>

  <div class="buttons">
    <button data-dir="left" class="left" aria-label="Previous">
      <Icon name="mdi:chevron-left" size={ICON_SIZE_LG} />
    </button>
    <slot name="button" />
    <button data-dir="right" aria-label="Next">
      <Icon name="mdi:chevron-right" size={ICON_SIZE_LG} />
    </button>
  </div>
</astro-carousel>

<style>
  astro-carousel {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 100%;
    max-width: 100%;
  }

  .inner {
    display: flex;
    gap: 1rem;
    overflow-y: auto;
    padding: 1rem 0.5rem;
    max-width: 100%;
  }

  .inner > :global(*) {
    min-width: 21rem;
    max-width: 21rem;
  }

  .buttons {
    margin-top: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  [data-dir] {
    aspect-ratio: 1;
    padding: 0.5rem;

    background-color: white;

    display: none;
  }
</style>

<script>
  class Carousel extends HTMLElement {
    #inner: HTMLDivElement;
    #left: HTMLButtonElement;
    #right: HTMLButtonElement;

    scrollList(list?: Element) {
      if (typeof list === "undefined") { return; }
  
      this.#inner.scrollTo({
          left:
            this.#inner.scrollLeft -
            this.#inner.getBoundingClientRect().left +
            list.getBoundingClientRect().left - 5,
          
          behavior: 'smooth'
        });
    }

    left() {
      this.scrollList(
        [...this.#inner.children]
          .reverse()
          .find(el => el.getBoundingClientRect().x < 0)
      )
    }

    right() {
      this.scrollList(
        [...this.#inner.children]
          .find(el => el.getBoundingClientRect().x > 30)
      )
    }

    constructor() {
      super();
      this.#inner = this.querySelector(".inner")!;
      this.#left  = this.querySelector("[data-dir='left']")!;
      this.#right = this.querySelector("[data-dir='right']")!;

      this.#left.onclick = () => this.left();
      this.#right.onclick = () => this.right();

      const resized = new ResizeObserver(observed => {
          const { scrollWidth, clientWidth } = observed[0].target;

          if (scrollWidth > clientWidth) {
              this.#left.style.display = "block";
              this.#right.style.display = "block";
          } else {
              this.#left.style.display = "none";
              this.#right.style.display = "none";
          }
      });

      resized.observe(this.#inner);
    }
  }

  customElements.define("astro-carousel", Carousel);
</script>
